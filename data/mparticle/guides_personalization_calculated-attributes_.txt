DOCSDOCSHomeGuidesDevelopersIntegrationsChangelogSign UpDocumentationDevelopersAPI ReferencesPlatform APIPlatform API OverviewAccountsAppsAudiencesCalculated AttributesData PointsFeedsField TransformationsServicesUsersWorkspacesData Subject Request APIData Subject Request API Version 1 and 2Data Subject Request API Version 3Warehouse Sync APIWarehouse Sync API OverviewWarehouse Sync API TutorialWarehouse Sync API ReferenceData MappingWarehouse Sync SQL ReferenceWarehouse Sync Troubleshooting GuideComposeIDWarehouse Sync API v2 MigrationCalculated Attributes Seeding APIBulk Profile Deletion API ReferenceCustom Access Roles APIData Planning APIGroup Identity API ReferencePixel ServiceProfile APIEvents APImParticle JSON Schema ReferenceIDSyncClient SDKsAMPAMP SDKAndroidInitializationConfigurationNetwork Security ConfigurationEvent TrackingUser AttributesIDSyncScreen EventsCommerce EventsLocation TrackingMediaKitsApplication State and Session ManagementData Privacy ControlsError TrackingOpt OutPush NotificationsWebView IntegrationLoggerPreventing Blocked HTTP Traffic with CNAMELinting Data PlansTroubleshooting the Android SDKAPI ReferenceUpgrade to Version 5CordovaCordova PluginIdentityDirect Url RoutingDirect URL Routing FAQWebAndroidiOSFlutterGetting StartedUsageAPI ReferenceiOSInitializationConfigurationEvent TrackingUser AttributesIDSyncScreen TrackingCommerce EventsLocation TrackingMediaKitsApplication State and Session ManagementData Privacy ControlsError TrackingOpt OutPush NotificationsWebview IntegrationUpload FrequencyApp ExtensionsPreventing Blocked HTTP Traffic with CNAMELinting Data PlansTroubleshooting iOS SDKSocial NetworksiOS 14 GuideiOS 15 FAQiOS 16 FAQiOS 17 FAQiOS 18 FAQAPI ReferenceUpgrade to Version 7RokuGetting StartedIdentityMediaReact NativeGetting StartedIdentityUnityUpload FrequencyGetting StartedOpt OutInitialize the SDKEvent TrackingCommerce TrackingError TrackingScreen TrackingIdentityLocation TrackingSession ManagementXboxGetting StartedIdentityWebInitializationConfigurationContent Security PolicyEvent TrackingUser AttributesIDSyncPage View TrackingCommerce EventsLocation TrackingMediaKitsApplication State and Session ManagementData Privacy ControlsError TrackingOpt OutCustom LoggerPersistenceNative Web ViewsSelf-HostingMultiple InstancesWeb SDK via Google Tag ManagerPreventing Blocked HTTP Traffic with CNAMEFacebook Instant ArticlesTroubleshooting the Web SDKBrowser CompatibilityLinting Data PlansAPI ReferenceUpgrade to Version 2 of the SDKXamarinGetting StartedIdentityWebAlexaMedia SDKsAndroidiOSWebToolsmParticle Command Line InterfaceLinting ToolsSmartypeServer SDKsNode SDKGo SDKPython SDKRuby SDKJava SDKQuickstartAndroidOverviewStep 1. Create an inputStep 2. Verify your inputStep 3. Set up your outputStep 4. Create a connectionStep 5. Verify your connectionStep 6. Track eventsStep 7. Track user dataStep 8. Create a data planStep 9. Test your local appHTTP Quick StartStep 1. Create an inputStep 2. Create an outputStep 3. Verify outputiOS Quick StartOverviewStep 1. Create an inputStep 2. Verify your inputStep 3. Set up your outputStep 4. Create a connectionStep 5. Verify your connectionStep 6. Track eventsStep 7. Track user dataStep 8. Create a data planJava Quick StartStep 1. Create an inputStep 2. Create an outputStep 3. Verify outputNode Quick StartStep 1. Create an inputStep 2. Create an outputStep 3. Verify outputPython Quick StartStep 1. Create an inputStep 2. Create an outputStep 3. Verify outputWebOverviewStep 1. Create an inputStep 2. Verify your inputStep 3. Set up your outputStep 4. Create a connectionStep 5. Verify your connectionStep 6. Track eventsStep 7. Track user dataStep 8. Create a data planGuidesPartnersIntroductionOutbound IntegrationsOutbound IntegrationsFirehose Java SDKInbound IntegrationsKit IntegrationsOverviewAndroid Kit IntegrationJavaScript Kit IntegrationiOS Kit IntegrationCompose IDData Hosting LocationsGlossaryMigrate from Segment to mParticleMigrate from Segment to mParticleMigrate from Segment to Client-side mParticleMigrate from Segment to Server-side mParticleSegment-to-mParticle Migration ReferenceRules Developer GuideAPI Credential ManagementThe Developer's Guided Journey to mParticleGuidesGetting StartedCreate an InputStart capturing dataConnect an Event OutputCreate an AudienceConnect an Audience OutputTransform and Enhance Your DataPersonalizationIntroductionProfilesAudiencesAudiences OverviewCreate an AudienceConnect an AudienceManage AudiencesReal-time Audiences (Legacy)Standard Audiences (Legacy)Calculated AttributesCalculated Attributes OverviewUsing Calculated AttributesCreate with AI AssistanceCalculated Attributes ReferencePredictive AudiencesPredictive Audiences OverviewUsing Predictive AudiencesJourneysJourneys OverviewManage JourneysDownload an audience from a journeyAudience A/B testing from a journeyJourneys 2.0Predictive AttributesWhat are predictive attributes?Predict Future BehaviorCreate Future PredictionUse Future Predictions in CampaignsAssess and Troubleshoot PredictionsNext Best ActionNext Best Action OverviewCreate a Next Best Action (NBA)View and Manage NBAsActivate Next Best Actions in CampaignsPlatform GuideBillingUsage and Billing ReportThe New mParticle ExperienceThe new mParticle ExperienceThe Overview MapObservabilityObservability OverviewObservability User GuideObservability Troubleshooting ExamplesObservability Span GlossaryIntroductionData RetentionConnectionsActivityLive StreamData FilterRulesTiered EventsmParticle Users and RolesAnalytics Free TrialTroubleshooting mParticleUsage metering for value-based pricing (VBP)AnalyticsIntroductionSetupSync and Activate Analytics User Segments in mParticleUser Segment ActivationWelcome Page AnnouncementsSettingsProject SettingsRoles and TeammatesOrganization SettingsGlobal Project FiltersPortfolio AnalyticsAnalytics Data ManagerAnalytics Data Manager OverviewEventsEvent PropertiesUser PropertiesRevenue MappingExport DataUTM GuideQuery BuilderData DictionaryQuery Builder OverviewModify Filters With And/Or ClausesQuery-time SamplingQuery NotesFilter Where ClausesEvent vs. User PropertiesGroup By ClausesAnnotationsCross-tool CompatibilityApply All for Filter Where ClausesDate Range and Time Settings OverviewUser Attributes at Event TimeUnderstanding the Screen View EventAnalysesAnalyses IntroductionSegmentation: BasicsGetting StartedVisualization OptionsFor ClausesDate Range and Time SettingsCalculatorNumerical SettingsSegmentation: AdvancedAssisted AnalysisProperties ExplorerFrequency in SegmentationTrends in SegmentationDid [not] Perform ClausesCumulative vs. Non-Cumulative Analysis in SegmentationTotal Count of vs. Users Who PerformedSave Your Segmentation AnalysisExport Results in SegmentationExplore Users from SegmentationFunnels: BasicsGetting Started with FunnelsGroup By SettingsConversion WindowTracking PropertiesDate Range and Time SettingsVisualization OptionsInterpreting a Funnel AnalysisFunnels: AdvancedGroup ByFiltersConversion over TimeConversion OrderTrendsFunnel DirectionMulti-path FunnelsAnalyze as Cohort from FunnelSave a Funnel AnalysisExplore Users from a FunnelExport Results from a FunnelCohortsGetting Started with CohortsAnalysis ModesSave a Cohort AnalysisExport ResultsExplore UsersSaved AnalysesManage Analyses in DashboardsJourneysGetting StartedEvent MenuVisualizationEnding EventSave a Journey AnalysisUsersGetting StartedUser Activity TimelinesTime SettingsExport ResultsSave A User AnalysisDashboardsDashboards––Getting StartedManage DashboardsDashboard FiltersOrganize DashboardsScheduled ReportsFavoritesTime and Interval Settings in DashboardsQuery Notes in DashboardsUser AliasingAnalytics ResourcesThe Demo EnvironmentKeyboard ShortcutsTutorialsAnalytics for MarketersAnalytics for Product ManagersCompare Conversion Across Acquisition SourcesAnalyze Product Feature UsageIdentify Points of User FrictionTime-based Subscription AnalysisDashboard Tips and TricksUnderstand Product StickinessOptimize User Flow with A/B TestingUser SegmentsAPIsUser Segments Export APIDashboard Filter APIIDSyncIDSync OverviewUse Cases for IDSyncComponents of IDSyncStore and Organize User DataIdentify UsersDefault IDSync ConfigurationProfile Conversion StrategyProfile Link StrategyProfile Isolation StrategyBest Match StrategyAliasingData MasterGroup IdentityOverviewCreate and Manage Group DefinitionsIntroductionCatalogLive StreamData PlansData PlansBlocked Data Backfill GuideWarehouse SyncData Privacy ControlsData Subject RequestsDefault Service LimitsFeedsCross-Account Audience SharingApproved Sub-ProcessorsImport Data with CSV FilesImport Data with CSV FilesCSV File ReferenceGlossaryVideo IndexAnalytics (Deprecated)Identity ProvidersSingle Sign-On (SSO)Setup ExamplesSettingsDebug ConsoleData Warehouse Delay AlertingIntroductionDeveloper DocsIntroductionIntegrationsIntroductionRudderstackGoogle Tag ManagerSegmentData Warehouses and Data LakesAdvanced Data Warehouse SettingsAWS Kinesis (Snowplow)AWS Redshift (Define Your Own Schema)AWS S3 Integration (Define Your Own Schema)AWS S3 (Snowplow Schema)BigQuery (Snowplow Schema)BigQuery Firebase SchemaBigQuery (Define Your Own Schema)GCP BigQuery ExportSnowflake (Snowplow Schema)Snowplow Schema OverviewSnowflake (Define Your Own Schema)APIsREST APIDashboard Filter API (Deprecated)User Segments Export API (Deprecated)SDKsSDKs IntroductionReact NativeiOSAndroidJavaJavaScriptPythonObject APIDeveloper BasicsAliasingCalculated Attributes OverviewA calculated attribute (CA) measure users’ aggregate behaviors, and store this information in new user attributes, such as customer lifetime value, total games played or content watched, or the last product viewed. You define a calculated attribute in mParticle and, once activated, they are computed automatically over time by using the raw data stream of events and user information. Once you’ve created calculated attributes, you can use them as segmentation criteria in Audiences, Profile API, or connect them downstream to any of your tools. This is incredibly powerful, and can be set up with a few button clicks–no SQL, no pipeline management.
Calculated attributes are a paid premium feature. Contact your mParticle representative if you’re interested in using calculated attributes.
You can define calculated attributes to track almost anything on an individual user, from counting the number of logins in the last 30 days or knowing the last product category viewed, to more complex calculations like the customer’s average order revenue or the most frequent purchase.
Calculated attributes provide value in many ways:
Enabling and targeting personalized campaigns with an always-on understanding of the customer’s behavior
Helping marketers, product managers and data scientists better understand customer behavior and interactions with their brand
Standardizing calculated values across the entire marketing and analytics stack, across platforms and tools
The following video explains how calculated attributes help you quickly generate customer insights without needing any developer resources:
Calculated attributes basics
A calculated attribute contains the following elements that you define:
Name: a descriptive label for the calculated attribute. Once activated, the name can’t be changed.
Description: an optional text field to describe the attribute.
Calculation definition: The logic for computing the attribute: the calculation type, criteria, and the date range. For example, you might specify a sum calculation type.
Status: Calculated attributes are created as drafts, indicating that they are not being calculated. When you change a calculated attribute status to active, mParticle starts calculating the attributes and you can use them across the mParticle platform and downstream.
Scope
Calculated attributes are defined and calculated per workspace; calculations use data available within the same workspace where they are defined. You can create calculated attributes with the same name and functionality in multiple workspaces.
Initialization
After you activate a calculated attribute, it initializes using existing data in the mParticle CDP along with any seeded value that was sent using Seeding API. Depending on the date range selected in the calculated attribute definition, this can take several hours. After initialization, calculated attributes continue to recalculate with new data.
Calculation speed
Calculations are either synchronous (sent with the batch of data being processed) or asynchronous (sent with the next batch):
Synchronous calculations are evaluated immediately and updated values are included in the same outgoing event batch.
Asynchronous calculations are evaluated with a small delay (usually a few minutes) and updated values are included in the next outgoing event batch or when the feed input named Calculated Attributes is connected (more about this feed). If your event output doesn’t support the Calculated Attributes feed, user attribute values may grow stale until mParticle receives the next event or batch for the relevant user.
Calculation categories
We currently support 13 calculations organized into four categories:
Count: calculate the number of times an event has occurred, such as the number of logins or cart views.
Aggregation: calculate a standard statistic about an event attribute such as sum, minimum, or maximum.
Occurrence: calculate the timestamp for an event, or the first or last value or timestamp.
List: calculate the unique list of values for an event attribute. For example, all the unique game titles played or unique product categories viewed.
For a list of calculations and details about each, see Calculated Attributes Reference.
For an overview of how to use calculation categories, view the following video:
Calculation date range
Calculated attributes can apply to a date range that you choose:
Within the Last: limit calculations to a rolling window of time (days or weeks). For example, “most frequent product categories viewed over the last 30 days.” This will maintain calculations over that specified period of time.
Since: limit calculations to the period of a specified start date to now.
Note that above the date range selection drop-downs, the UI displays the date that data was first ingested into mParticle.
You can choose a date earlier than the first date that data was ingested, however, mParticle only calculates as of the earliest ingestion date.
All time: calculate based on all the data available per your long-term data retention policy. This option is only available if you have the Unlimited Lookback feature.
Unlimited Lookback, which can extend the date range to your long-term data retention, is available as a premium feature.
Conditional logic
After selecting an event, you can add conditions to the attribute in order to more precisely define results. For example, a retailer creating a calculated attribute might use the Contains operator with a Count attribute to count only the purchases that contain “Sock” in the product name. For a complete list of operators for the four categories of attributes (Count, Aggregation, Occurrence, and List), see Conditions.
Calculation attribute seeding
Seeding allows you to pass in historic values for calculated attributes that mParticle builds on as new data arrives, without passing in the raw events. Seeding allows you to transition from your own calculations to mParticle calculation. For example, you may have data from outside mParticle about the last four months’ bookings. You can create a calculated attribute, then send the seed data to mParticle using the Calculated Attributes Seeding API. mParticle then combines your seed data and live data so there’s no interruption.
You can seed calculated attributes in both draft (recommended) and active states; the calculated attribute must exist before you can seed it.
Seeding requires two pieces of information:
The seed values: the values required to calculate the attribute.
The seed cut-off date: any data prior to this date is processed by your team into seed values, and mParticle only uses live data on or after this date in the calculation, combining the result with seed values. Using the correct cut-off date ensures an accurate transition into mParticle and avoids duplications of data in calculating a calculated attribute.
Note the following calculated attribute behavior:
After a calculated attribute is already in an active status, receiving data via historical API doesn’t automatically trigger a recalculation. You must either create a new or update the definition of the calculated attribute to trigger a recalculation.
Seeding of a rolling time window is not supported. Thus, seeded values don’t decrement when they pass out of the calculated attribute window, for example a calculated attribute date range of “within the last 4 weeks.”
Forwarding calculated attributes in an audience integration
If a partner supports user attribute forwarding, you can forward calculated attributes in an audience integration alongside user attributes. Different partners have implemented user attribute forwarding in different ways.
For example, Salesforce uses a separate data extension while Google BigQuery uses the configuration setting Send User Attributes.
Use Case Guide
To walk through several different scenarios for using calculated attributes, download the Calculated Attributes Use Case Guide.Was this page helpful?YesNoLast Updated: February 27, 2025© 2025 mParticle, Inc. All rights reserved.mParticle.comPrivacy PolicyCookie PolicyDo Not Sell or Share My Personal Data